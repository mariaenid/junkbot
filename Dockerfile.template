# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
FROM balenalib/beaglebone-black-alpine-python:latest

RUN apk --update add gcc make g++ zlib-dev

RUN apk add --no-cache musl-dev python3 python3-dev

RUN apk add -q update && \
    apk add install python-dev python-pip python-smbus python-psutil gcc make && \
    pip3 install spidev && \
    pip3 install dot3k && \
    apk add -qy remove python-dev gcc make && \
    rm -rf /var/lib/apt/lists/* && \
    apk add -qy clean all

#install python & dependencies

# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
RUN install_packages git

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip3 install --no-cache-dir -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# main.py will run when container starts up on the device
CMD ["python","-u","src/main.py"]